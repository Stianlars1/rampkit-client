.quickExport {
  border: 1px solid hsl(var(--border));
  border-radius: 8px;
  padding: 24px 16px 24px;
  position: relative;
  display: flex;
  flex-direction: column;
  gap: 16px;
  margin-top: 32px;

  overflow-x: clip;

  transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);

  background:
    linear-gradient(
      136deg,
      hsl(var(--primary) / 0.15) 0%,
      hsl(var(--primary) / 0.1) 100%
    ),
    url("data:image/svg+xml,%3Csvg viewBox='0 0 256 256' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.9' numOctaves='4' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)' opacity='0.02'/%3E%3C/svg%3E");

  backdrop-filter: blur(24px) saturate(180%);

  &::after {
    content: "";
    position: absolute;
    inset: 0;
    z-index: -1;
    pointer-events: none;
    border-radius: 8px;
    overflow: clip;
    background: hsl(var(--background) / 0.35);
  }

  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    overflow: clip;
    border-radius: 32px;
    background: linear-gradient(
      90deg,
      transparent 0%,
      hsl(var(--foreground) / 0.1) 50%,
      transparent 100%
    );
    opacity: 0;
    transition: all 1.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    pointer-events: none;
    overflow: hidden;
  }

  &:hover {
    transform: translateY(-1px);
    border-color: hsl(var(--border) / 0.3);
    box-shadow:
      inset 0 1px 0 hsl(var(--foreground) / 0.01),
      inset 0 -1px 0 hsl(var(--background) / 0.01),
      0 32px 64px hsl(var(--background) / 0.015),
      0 16px 32px hsl(var(--background) / 0.012);

    &::before {
      opacity: 0.5;
      transform: translateX(150%);
    }
  }
}

.exportHeader {
  display: flex;
  align-items: flex-start;
  justify-content: space-between;
  gap: 16px;
  margin-bottom: 20px;
}

.exportTitle {
  h3 {
    margin: 0 0 4px 0;
    font-size: 18px;
    font-weight: 600;
    color: hsl(var(--foreground));
  }
}

.exportSubtitle {
  margin: 0;
  font-size: 14px;
  opacity: 0.7;
  color: hsl(var(--muted-foreground));
}

.exportActions {
  display: flex;
  gap: 8px;
  flex-shrink: 0;

  button {
    display: flex;
    align-items: center;
    gap: 6px;
    padding: 8px 16px;
    border: 1px solid hsl(var(--border));
    border-radius: 8px;
    background: hsl(var(--background));
    color: hsl(var(--foreground));
    cursor: pointer;
    font-size: 13px;
    font-weight: 500;
    transition: all 0.2s cubic-bezier(0.23, 1, 0.32, 1);

    &:hover {
      background: hsl(var(--muted));
      border-color: hsl(var(--border) / 0.8);
      transform: translateY(-1px);
      box-shadow: 0 4px 12px hsl(var(--background) / 0.15);
    }

    &:active {
      transform: translateY(0);
    }
  }
}

.copyButton {
  .copyIcon {
    font-size: 12px;
    opacity: 0.8;
  }

  &:hover .copyIcon {
    opacity: 1;
  }
}

.downloadButton {
  .downloadIcon {
    font-size: 14px;
    opacity: 0.8;
  }

  &:hover .downloadIcon {
    opacity: 1;
  }
}

.tabContainer {
  margin-bottom: 16px;
}

.tabRow {
  display: flex;
  gap: 4px;
  margin-bottom: 12px;
  padding: 4px;
  background: hsl(var(--muted) / 0.3);
  border-radius: 10px;
  border: 1px solid hsl(var(--border) / 0.5);
}

.tab,
.tabActive {
  display: flex;
  align-items: center;
  gap: 6px;
  padding: 8px 16px;
  border-radius: 6px;
  font-size: 13px;
  font-weight: 500;
  border: none;
  background: transparent;
  cursor: pointer;
  transition: all 0.2s cubic-bezier(0.23, 1, 0.32, 1);
  color: hsl(var(--muted-foreground));
  border: 1px solid transparent;

  .tabIcon {
    font-size: 14px;
    opacity: 0.7;
  }

  &:hover {
    background: hsl(var(--background) / 0.5);
    color: hsl(var(--foreground));

    .tabIcon {
      opacity: 1;
    }
  }
}

.tabActive {
  background: hsl(var(--background));
  color: hsl(var(--foreground));
  box-shadow:
    0 1px 3px hsl(var(--background) / 0.1),
    0 1px 2px hsl(var(--background) / 0.06);
  border: 1px solid hsl(var(--border) / 0.5);

  .tabIcon {
    opacity: 1;
  }
}

.fileInfo {
  display: flex;
  align-items: center;
  justify-content: space-between;
  font-size: 12px;
  opacity: 0.6;
  margin-bottom: 8px;

  .filename {
    font-family: ui-monospace, SFMono-Regular, Menlo, Consolas, monospace;
  }

  .language {
    text-transform: uppercase;
    font-weight: 600;
    letter-spacing: 0.5px;
  }
}

.codeContainer {
  position: relative;
  border: 1px solid hsl(var(--border) / 0.6);
  border-radius: 12px;
  overflow: hidden;
  background: linear-gradient(
    145deg,
    hsl(var(--muted) / 0.1) 0%,
    hsl(var(--background) / 0.05) 100%
  );

  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 1px;
    background: linear-gradient(
      90deg,
      transparent 0%,
      hsl(var(--border) / 0.8) 50%,
      transparent 100%
    );
  }
}

.exportCode {
  margin: 0;
  height: 100%;
  overflow: auto;
  padding: 20px;
  font-family:
    "JetBrains Mono", ui-monospace, SFMono-Regular, Menlo, Consolas, monospace;
  font-size: 13px;
  line-height: 1.6;
  background: transparent;

  /* Custom scrollbar */
  &::-webkit-scrollbar {
    width: 8px;
    height: 8px;
  }

  &::-webkit-scrollbar-track {
    background: hsl(var(--muted) / 0.2);
    border-radius: 4px;
  }

  &::-webkit-scrollbar-thumb {
    background: hsl(var(--muted-foreground) / 0.3);
    border-radius: 4px;

    &:hover {
      background: hsl(var(--muted-foreground) / 0.5);
    }
  }

  code {
    color: hsl(var(--foreground) / 0.9);

    /* Syntax highlighting for different languages */
    &.css {
      .property {
        color: hsl(220, 98%, 61%);
      }
      .value {
        color: hsl(135, 94%, 65%);
      }
    }

    &.scss {
      .mixin {
        color: hsl(301, 63%, 40%);
      }
      .variable {
        color: hsl(207, 82%, 66%);
      }
    }

    &.typescript {
      .keyword {
        color: hsl(207, 61%, 59%);
      }
      .string {
        color: hsl(135, 94%, 65%);
      }
      .type {
        color: hsl(35, 99%, 36%);
      }
    }

    &.json {
      .key {
        color: hsl(207, 82%, 66%);
      }
      .string {
        color: hsl(135, 94%, 65%);
      }
      .number {
        color: hsl(35, 99%, 36%);
      }
    }
  }
}

.codePreview {
  &.codePreview {
    all: unset;
    width: 100%;
    --cp-border: hsl(var(--border));
    height: 100%;
    pre {
      max-height: unset;
    }
  }
}
